---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { getStaticPaths as getI18nStaticPaths } from '../../lib/i18n/utils';
import { useTranslations, type Language } from '../../lib/i18n/languages';

export function getStaticPaths() {
	return getI18nStaticPaths();
}

const { lang } = Astro.params as { lang: Language };
const t = useTranslations(lang);

// TODO: This will be populated by the improvement-tracker agent
const improvements = [
  // Completed improvements
  {
    date: '2025-10-07',
    completedDate: '2025-10-07',
    status: 'completed',
    title: {
      ko: 'Google Analytics 로컬호스트 환경 비활성화',
      en: 'Google Analytics Localhost Environment Deactivation',
      ja: 'Google Analytics ローカルホスト環境無効化'
    },
    category: 'Technical',
    before: {
      metric: { ko: 'GA 로드', en: 'GA Loading', ja: 'GA読み込み' },
      value: { ko: '모든 환경', en: 'All environments', ja: '全環境' }
    },
    after: {
      metric: { ko: 'GA 로드', en: 'GA Loading', ja: 'GA読み込み' },
      value: { ko: '프로덕션만', en: 'Production only', ja: '本番環境のみ' }
    },
    impact: '+100%',
    impactType: 'positive',
    effort: { ko: '낮음', en: 'Low', ja: '低' },
    roi: { ko: '높음', en: 'High', ja: '高' },
    description: {
      ko: '로컬 개발 환경에서 Google Analytics가 로드되지 않도록 개선. 개발 중 불필요한 이벤트 발생 방지 및 데이터 정확도 향상',
      en: 'Improved to prevent Google Analytics from loading in local development environment. Prevents unnecessary event firing during development and improves data accuracy',
      ja: 'ローカル開発環境でGoogle Analyticsが読み込まれないように改善。開発中の不要なイベント発生を防止し、データ精度を向上'
    },
    lessons: {
      ko: [
        'Astro.url.hostname을 사용하여 로컬호스트 감지',
        'isLocalhost 변수로 localhost 및 127.0.0.1 체크',
        'GA 기본 스크립트(gtag.js)를 조건부 렌더링',
        'External Link Click Tracking 조건부 렌더링',
        'Core Web Vitals Tracking 조건부 렌더링',
        '로컬 환경에서 디버그 메시지 콘솔 출력',
        '프로덕션 데이터 품질 향상'
      ],
      en: [
        'Detected localhost using Astro.url.hostname',
        'Created isLocalhost variable to check for localhost and 127.0.0.1',
        'Conditionally rendered GA base script (gtag.js)',
        'Conditionally rendered External Link Click Tracking',
        'Conditionally rendered Core Web Vitals Tracking',
        'Added debug console message in local environment',
        'Improved production data quality'
      ],
      ja: [
        'Astro.url.hostnameを使用してローカルホストを検出',
        'isLocalhost変数でlocalhostと127.0.0.1をチェック',
        'GA基本スクリプト(gtag.js)を条件付きレンダリング',
        'External Link Click Trackingを条件付きレンダリング',
        'Core Web Vitals Trackingを条件付きレンダリング',
        'ローカル環境でデバッグメッセージをコンソール出力',
        '本番データ品質向上'
      ]
    }
  },
  {
    date: '2025-10-07',
    completedDate: '2025-10-07',
    status: 'completed',
    title: {
      ko: 'Google Analytics 커스텀 이벤트 개선',
      en: 'Google Analytics Custom Event Improvements',
      ja: 'Google Analyticsカスタムイベント改善'
    },
    category: 'Technical',
    before: {
      metric: { ko: '이벤트 정확도', en: 'Event Accuracy', ja: 'イベント精度' },
      value: { ko: '기본 추적', en: 'Basic tracking', ja: '基本追跡' }
    },
    after: {
      metric: { ko: '이벤트 정확도', en: 'Event Accuracy', ja: 'イベント精度' },
      value: { ko: '향상된 추적', en: 'Enhanced tracking', ja: '向上した追跡' }
    },
    impact: '+100%',
    impactType: 'positive',
    effort: { ko: '중간', en: 'Medium', ja: '中程度' },
    roi: { ko: '높음', en: 'High', ja: '高' },
    description: {
      ko: 'Google Analytics 커스텀 이벤트의 정확도와 신뢰성 개선. 이벤트 중복 발생 방지 및 추적 로직 최적화',
      en: 'Improved accuracy and reliability of Google Analytics custom events. Prevented duplicate event firing and optimized tracking logic',
      ja: 'Google Analyticsカスタムイベントの精度と信頼性を改善。イベント重複発生を防止し追跡ロジックを最適化'
    },
    lessons: {
      ko: [
        'BaseHead.astro: 외부 링크 클릭 추적 개선 (중복 방지 로직 추가)',
        'BlogPost.astro: 블로그 읽기 완료 이벤트 최적화 (스크롤 100% 도달 시 1회만 발생)',
        'Footer.astro: 소셜 링크 클릭 추적 정확도 향상',
        'Contact.astro: 문의 폼 상호작용 감지 개선',
        '모든 이벤트에 중복 방지 메커니즘 적용'
      ],
      en: [
        'BaseHead.astro: Enhanced external link click tracking (added duplicate prevention)',
        'BlogPost.astro: Optimized blog read completion event (fires only once at 100% scroll)',
        'Footer.astro: Improved social link click tracking accuracy',
        'Contact.astro: Enhanced contact form interaction detection',
        'Applied duplicate prevention mechanism to all events'
      ],
      ja: [
        'BaseHead.astro：外部リンククリック追跡改善（重複防止ロジック追加）',
        'BlogPost.astro：ブログ読了イベント最適化（スクロール100%到達時1回のみ発生）',
        'Footer.astro：ソーシャルリンククリック追跡精度向上',
        'Contact.astro：お問い合わせフォーム相互作用検出改善',
        'すべてのイベントに重複防止メカニズムを適用'
      ]
    }
  },
  {
    date: '2025-10-06',
    completedDate: '2025-10-06',
    status: 'completed',
    title: {
      ko: '사이트맵 생성 및 검색엔진 최적화',
      en: 'Sitemap Generation and Search Engine Optimization',
      ja: 'サイトマップ生成と検索エンジン最適化'
    },
    category: 'SEO',
    before: {
      metric: { ko: '사이트맵', en: 'Sitemap', ja: 'サイトマップ' },
      value: { ko: '없음', en: 'None', ja: 'なし' }
    },
    after: {
      metric: { ko: '사이트맵', en: 'Sitemap', ja: 'サイトマップ' },
      value: { ko: '자동 생성', en: 'Auto-generated', ja: '自動生成' }
    },
    impact: '+100%',
    impactType: 'positive',
    effort: { ko: '낮음', en: 'Low', ja: '低' },
    roi: { ko: '매우 높음', en: 'Very High', ja: '非常に高い' },
    description: {
      ko: 'XML 사이트맵 자동 생성 및 검색엔진 제출로 검색 노출 개선. Google, Bing 등 주요 검색엔진에 사이트 구조 정보 제공',
      en: 'Improved search visibility through automatic XML sitemap generation and submission to search engines. Provided site structure information to major search engines like Google and Bing',
      ja: 'XMLサイトマップ自動生成と検索エンジン提出により検索露出を改善。Google、Bingなど主要検索エンジンにサイト構造情報を提供'
    },
    lessons: {
      ko: [
        '@astrojs/sitemap 통합으로 자동 사이트맵 생성',
        '빌드 시 sitemap-index.xml 자동 생성',
        '다국어 페이지 모두 포함 (ko, en, ja)',
        'Google Search Console 및 Bing Webmaster Tools 제출',
        'robots.txt에 사이트맵 위치 명시',
        '검색엔진 크롤링 효율성 향상'
      ],
      en: [
        'Auto-generated sitemap with @astrojs/sitemap integration',
        'Automatic sitemap-index.xml generation at build time',
        'Included all multilingual pages (ko, en, ja)',
        'Submitted to Google Search Console and Bing Webmaster Tools',
        'Specified sitemap location in robots.txt',
        'Enhanced search engine crawling efficiency'
      ],
      ja: [
        '@astrojs/sitemap統合により自動サイトマップ生成',
        'ビルド時にsitemap-index.xml自動生成',
        '多言語ページをすべて含む（ko、en、ja）',
        'Google Search ConsoleおよびBing Webmaster Toolsに提出',
        'robots.txtにサイトマップ位置を明示',
        '検索エンジンクローリング効率向上'
      ]
    }
  },
  {
    date: '2025-10-05',
    completedDate: '2025-10-05',
    status: 'completed',
    title: {
      ko: 'Giscus 댓글 시스템 도입',
      en: 'Giscus Comment System Implementation',
      ja: 'Giscusコメントシステム導入'
    },
    category: 'UX',
    before: {
      metric: { ko: '댓글 기능', en: 'Comment Feature', ja: 'コメント機能' },
      value: { ko: '없음', en: 'None', ja: 'なし' }
    },
    after: {
      metric: { ko: '댓글 기능', en: 'Comment Feature', ja: 'コメント機能' },
      value: { ko: 'GitHub Discussions 기반', en: 'GitHub Discussions-based', ja: 'GitHub Discussions ベース' }
    },
    impact: '+100%',
    impactType: 'positive',
    effort: { ko: '낮음', en: 'Low', ja: '低' },
    roi: { ko: '매우 높음', en: 'Very High', ja: '非常に高い' },
    description: {
      ko: 'GitHub Discussions 기반의 Giscus 댓글 시스템 도입으로 독자와의 소통 채널 구축. 로그인 없이 GitHub 계정으로 댓글 작성 가능',
      en: 'Established reader communication channel by implementing GitHub Discussions-based Giscus comment system. Enables commenting with GitHub account without separate login',
      ja: 'GitHub DiscussionsベースのGiscusコメントシステム導入により読者とのコミュニケーションチャネルを構築。別途ログインなしでGitHubアカウントでコメント可能'
    },
    lessons: {
      ko: [
        'GitHub Discussions를 댓글 저장소로 활용',
        '개발자 친화적인 댓글 시스템 (Markdown 지원)',
        '스팸 방지 및 모더레이션 기능 내장',
        'Dark/Light 테마 자동 전환',
        '다국어 지원 (ko, en, ja)',
        '모든 블로그 포스트에 자동 적용'
      ],
      en: [
        'Utilized GitHub Discussions as comment storage',
        'Developer-friendly comment system (Markdown support)',
        'Built-in spam prevention and moderation features',
        'Automatic Dark/Light theme switching',
        'Multilingual support (ko, en, ja)',
        'Automatically applied to all blog posts'
      ],
      ja: [
        'GitHub Discussionsをコメント保存先として活用',
        '開発者フレンドリーなコメントシステム（Markdownサポート）',
        'スパム防止とモデレーション機能内蔵',
        'Dark/Lightテーマ自動切り替え',
        '多言語サポート（ko、en、ja）',
        'すべてのブログ記事に自動適用'
      ]
    }
  },
  {
    date: '2025-10-05',
    completedDate: '2025-10-05',
    status: 'completed',
    title: {
      ko: 'Buy Me a Coffee 후원 버튼 추가',
      en: 'Buy Me a Coffee Support Button Implementation',
      ja: 'Buy Me a Coffee サポートボタン追加'
    },
    category: 'Content',
    before: {
      metric: { ko: '후원 기능', en: 'Support Feature', ja: 'サポート機能' },
      value: { ko: '없음', en: 'None', ja: 'なし' }
    },
    after: {
      metric: { ko: '후원 기능', en: 'Support Feature', ja: 'サポート機能' },
      value: { ko: '모든 포스트', en: 'All posts', ja: '全記事' }
    },
    impact: '+100%',
    impactType: 'positive',
    effort: { ko: '낮음', en: 'Low', ja: '低' },
    roi: { ko: '중간', en: 'Medium', ja: '中程度' },
    description: {
      ko: '블로그 포스트 하단에 Buy Me a Coffee 후원 버튼 추가. 독자들이 가치 있는 콘텐츠에 대해 감사 표현 가능',
      en: 'Added Buy Me a Coffee support button at the bottom of blog posts. Enables readers to show appreciation for valuable content',
      ja: 'ブログ記事の下部にBuy Me a Coffeeサポートボタンを追加。読者が価値あるコンテンツに対して感謝を表現可能'
    },
    lessons: {
      ko: [
        'BlogPost.astro 레이아웃에 BuyMeACoffee 컴포넌트 추가',
        '모든 블로그 포스트에 자동 표시',
        '비침해적 디자인 (포스트 하단 배치)',
        '다국어 메시지 지원',
        '독자 참여 및 커뮤니티 형성에 기여'
      ],
      en: [
        'Added BuyMeACoffee component to BlogPost.astro layout',
        'Automatically displayed on all blog posts',
        'Non-intrusive design (placed at post bottom)',
        'Multilingual message support',
        'Contributes to reader engagement and community building'
      ],
      ja: [
        'BlogPost.astroレイアウトにBuyMeACoffeeコンポーネントを追加',
        'すべてのブログ記事に自動表示',
        '非侵害的デザイン（記事下部に配置）',
        '多言語メッセージサポート',
        '読者参加とコミュニティ形成に貢献'
      ]
    }
  },
  {
    date: '2025-10-05',
    completedDate: '2025-10-05',
    status: 'completed',
    title: {
      ko: '파비콘 및 브랜드 아이덴티티 추가',
      en: 'Favicon and Brand Identity Implementation',
      ja: 'ファビコンとブランドアイデンティティ追加'
    },
    category: 'UX',
    before: {
      metric: { ko: '파비콘', en: 'Favicon', ja: 'ファビコン' },
      value: { ko: '기본 아이콘', en: 'Default icon', ja: 'デフォルトアイコン' }
    },
    after: {
      metric: { ko: '파비콘', en: 'Favicon', ja: 'ファビコン' },
      value: { ko: '커스텀 아이콘', en: 'Custom icon', ja: 'カスタムアイコン' }
    },
    impact: '+100%',
    impactType: 'positive',
    effort: { ko: '낮음', en: 'Low', ja: '低' },
    roi: { ko: '중간', en: 'Medium', ja: '中程度' },
    description: {
      ko: '브라우저 탭과 북마크에 표시되는 커스텀 파비콘 추가. 브랜드 인지도 향상 및 전문성 제고',
      en: 'Added custom favicon displayed in browser tabs and bookmarks. Improved brand recognition and professionalism',
      ja: 'ブラウザタブとブックマークに表示されるカスタムファビコンを追加。ブランド認知度向上と専門性向上'
    },
    lessons: {
      ko: [
        'public/favicon.svg 및 favicon.ico 추가',
        'Apple Touch Icon (apple-touch-icon.png) 지원',
        '다양한 디바이스 및 플랫폼 호환',
        'BaseHead.astro에 파비콘 메타태그 추가',
        'Progressive Web App (PWA) 준비',
        '브랜드 일관성 유지'
      ],
      en: [
        'Added public/favicon.svg and favicon.ico',
        'Apple Touch Icon (apple-touch-icon.png) support',
        'Compatible with various devices and platforms',
        'Added favicon meta tags to BaseHead.astro',
        'Progressive Web App (PWA) ready',
        'Maintained brand consistency'
      ],
      ja: [
        'public/favicon.svgとfavicon.icoを追加',
        'Apple Touch Icon（apple-touch-icon.png）サポート',
        '様々なデバイスとプラットフォームに対応',
        'BaseHead.astroにファビコンメタタグを追加',
        'Progressive Web App（PWA）対応',
        'ブランド一貫性を維持'
      ]
    }
  },
  {
    date: '2025-10-06',
    completedDate: '2025-10-06',
    status: 'completed',
    title: {
      ko: '다국어 블로그 포스트 언어 전환 컴포넌트 자동화',
      en: 'Multilingual Blog Post Language Switcher Component Automation',
      ja: '多言語ブログ記事言語切り替えコンポーネント自動化'
    },
    category: 'UX',
    before: {
      metric: { ko: '언어 전환 UI', en: 'Language Switcher UI', ja: '言語切り替えUI' },
      value: { ko: '수동 추가 필요', en: 'Manual addition required', ja: '手動追加が必要' }
    },
    after: {
      metric: { ko: '언어 전환 UI', en: 'Language Switcher UI', ja: '言語切り替えUI' },
      value: { ko: '자동 생성', en: 'Auto-generated', ja: '自動生成' }
    },
    impact: '+100%',
    impactType: 'positive',
    effort: { ko: '낮음', en: 'Low', ja: '低' },
    roi: { ko: '높음', en: 'High', ja: '高' },
    description: {
      ko: '블로그 포스트에 다른 언어 버전으로 전환할 수 있는 LanguageSwitcher 컴포넌트를 구현하여 모든 포스트에 자동 적용',
      en: 'Implemented LanguageSwitcher component to allow switching between language versions in blog posts, automatically applied to all posts',
      ja: 'ブログ記事で他の言語バージョンに切り替えられるLanguageSwitcherコンポーネントを実装し、すべての記事に自動適用'
    },
    lessons: {
      ko: [
        'src/components/LanguageSwitcher.astro 컴포넌트 생성',
        'slug와 currentLang을 props로 받아 동적 링크 생성',
        'BlogPost.astro 레이아웃에 통합 (BuyMeACoffee 위)',
        '기존 15개 블로그 포스트에서 수동 언어 전환 섹션 제거',
        '현재 언어는 비활성화, 다른 언어는 링크로 표시',
        '한국어, 일본어, 영어 3개 언어 지원',
        'URL 형식: /{lang}/blog/{lang}/{slug}'
      ],
      en: [
        'Created src/components/LanguageSwitcher.astro component',
        'Accepts slug and currentLang as props for dynamic link generation',
        'Integrated into BlogPost.astro layout (above BuyMeACoffee)',
        'Removed manual language switcher sections from 15 existing blog posts',
        'Current language shown as disabled, other languages as links',
        'Supports 3 languages: Korean, Japanese, English',
        'URL format: /{lang}/blog/{lang}/{slug}'
      ],
      ja: [
        'src/components/LanguageSwitcher.astroコンポーネントを作成',
        'slugとcurrentLangをpropsとして受け取り動的リンクを生成',
        'BlogPost.astroレイアウトに統合（BuyMeACoffeeの上）',
        '既存15件のブログ記事から手動言語切り替えセクションを削除',
        '現在の言語は無効化、他の言語はリンクとして表示',
        '韓国語、日本語、英語の3言語をサポート',
        'URL形式：/{lang}/blog/{lang}/{slug}'
      ]
    }
  },
  {
    date: '2025-10-05',
    completedDate: '2025-10-05',
    status: 'completed',
    title: {
      ko: '구조화된 데이터(Schema.org) 추가',
      en: 'Structured Data (Schema.org) Implementation',
      ja: '構造化データ（Schema.org）実装'
    },
    category: 'SEO',
    before: {
      metric: { ko: 'Schema 타입', en: 'Schema Types', ja: 'スキーマタイプ' },
      value: { ko: '0개', en: '0', ja: '0個' }
    },
    after: {
      metric: { ko: 'Schema 타입', en: 'Schema Types', ja: 'スキーマタイプ' },
      value: { ko: '3개 타입', en: '3 types', ja: '3タイプ' }
    },
    impact: '+300%',
    impactType: 'positive',
    effort: { ko: '낮음', en: 'Low', ja: '低' },
    roi: { ko: '높음', en: 'High', ja: '高' },
    sourceReport: `/${lang}/blog/${lang}/blog-launch-analysis-report`,
    description: {
      ko: 'Article, BreadcrumbList, WebSite Schema를 추가하여 검색엔진 최적화',
      en: 'Added Article, BreadcrumbList, and WebSite Schema for search engine optimization',
      ja: 'Article、BreadcrumbList、WebSite Schemaを追加して検索エンジン最適化'
    },
    lessons: {
      ko: [
        'BaseHead.astro에 WebSite Schema 추가 (모든 페이지)',
        'BaseHead.astro에 Article Schema (BlogPosting) 추가 (블로그 포스트만)',
        'BlogPost.astro에 BreadcrumbList Schema 추가',
        'articleData props를 통해 동적으로 메타데이터 전달'
      ],
      en: [
        'Added WebSite Schema to BaseHead.astro (all pages)',
        'Added Article Schema (BlogPosting) to BaseHead.astro (blog posts only)',
        'Added BreadcrumbList Schema to BlogPost.astro',
        'Dynamically pass metadata through articleData props'
      ],
      ja: [
        'BaseHead.astroにWebSite Schemaを追加（全ページ）',
        'BaseHead.astroにArticle Schema（BlogPosting）を追加（ブログ記事のみ）',
        'BlogPost.astroにBreadcrumbList Schemaを追加',
        'articleDataプロップスを通じて動的にメタデータを渡す'
      ]
    }
  },
  {
    date: '2025-10-05',
    completedDate: '2025-10-05',
    status: 'completed',
    title: {
      ko: 'Core Web Vitals 측정 시스템 구축',
      en: 'Core Web Vitals Measurement System',
      ja: 'Core Web Vitals測定システム構築'
    },
    category: 'Technical',
    before: {
      metric: { ko: '성능 측정', en: 'Performance Tracking', ja: 'パフォーマンス測定' },
      value: { ko: '없음', en: 'None', ja: 'なし' }
    },
    after: {
      metric: { ko: '성능 측정', en: 'Performance Tracking', ja: 'パフォーマンス測定' },
      value: { ko: '6개 지표 실시간', en: '6 metrics real-time', ja: '6つの指標リアルタイム' }
    },
    impact: '+600%',
    impactType: 'positive',
    effort: { ko: '낮음', en: 'Low', ja: '低' },
    roi: { ko: '매우 높음', en: 'Very High', ja: '非常に高い' },
    sourceReport: `/${lang}/blog/${lang}/blog-launch-analysis-report`,
    description: {
      ko: 'web-vitals 라이브러리를 사용하여 LCP, CLS, INP, FCP, TTFB, FID를 실시간 측정하고 Google Analytics로 자동 전송',
      en: 'Implemented real-time measurement of LCP, CLS, INP, FCP, TTFB, FID using web-vitals library with automatic GA4 reporting',
      ja: 'web-vitalsライブラリを使用してLCP、CLS、INP、FCP、TTFB、FIDをリアルタイム測定し、Google Analyticsに自動送信'
    },
    lessons: {
      ko: [
        'web-vitals 라이브러리 설치 (npm install web-vitals)',
        'BaseHead.astro에 onCLS, onLCP, onINP, onFCP, onTTFB 함수 추가',
        '개발 환경에서는 콘솔 로깅, 프로덕션에서는 GA4 전송',
        'PERFORMANCE_TESTING.md 가이드 문서 작성 (측정/분석/최적화 워크플로우)',
        '실시간 측정으로 성능 저하를 즉시 감지 가능'
      ],
      en: [
        'Installed web-vitals library (npm install web-vitals)',
        'Added onCLS, onLCP, onINP, onFCP, onTTFB functions to BaseHead.astro',
        'Console logging in development, GA4 reporting in production',
        'Created PERFORMANCE_TESTING.md guide (measurement/analysis/optimization workflow)',
        'Real-time monitoring enables immediate detection of performance regressions'
      ],
      ja: [
        'web-vitalsライブラリをインストール（npm install web-vitals）',
        'BaseHead.astroにonCLS、onLCP、onINP、onFCP、onTTFB関数を追加',
        '開発環境ではコンソールログ、本番環境ではGA4送信',
        'PERFORMANCE_TESTING.mdガイド文書を作成（測定/分析/最適化ワークフロー）',
        'リアルタイム測定によりパフォーマンス低下を即座に検出可能'
      ]
    }
  },
  {
    date: '2025-10-05',
    completedDate: '2025-10-05',
    status: 'completed',
    title: {
      ko: '이벤트 트래킹 강화',
      en: 'Event Tracking Enhancement',
      ja: 'イベントトラッキング強化'
    },
    category: 'Technical',
    before: {
      metric: { ko: '추적 이벤트', en: 'Tracked Events', ja: '追跡イベント' },
      value: { ko: '기본 페이지뷰만', en: 'Basic pageview only', ja: '基本ページビューのみ' }
    },
    after: {
      metric: { ko: '추적 이벤트', en: 'Tracked Events', ja: '追跡イベント' },
      value: { ko: '4개 추가 완료', en: '4 events added', ja: '4つのイベント追加完了' }
    },
    impact: '+400%',
    impactType: 'positive',
    effort: { ko: '낮음', en: 'Low', ja: '低' },
    roi: { ko: '높음', en: 'High', ja: '高' },
    sourceReport: `/${lang}/blog/${lang}/blog-launch-analysis-report`,
    description: {
      ko: '사용자 행동 추적을 위한 커스텀 이벤트 4개 추가 (스크롤 완료, 문의 클릭, 소셜 링크, 외부 링크)',
      en: 'Add 4 custom events for user behavior tracking (scroll complete, contact click, social links, external links)',
      ja: 'ユーザー行動追跡のためのカスタムイベント4つを追加（スクロール完了、お問い合わせクリック、ソーシャルリンク、外部リンク）'
    },
    lessons: {
      ko: [
        'BaseHead.astro에 전역 external_link_click 트래킹 추가',
        'BlogPost.astro에 스크롤 100% 도달 감지 및 이벤트 발생',
        'Footer.astro에 소셜 링크별 구분 트래킹 (data-social-platform 속성 활용)',
        'Contact 페이지 iframe 상호작용 감지 (window blur + activeElement 체크)'
      ],
      en: [
        'Added global external_link_click tracking to BaseHead.astro',
        'Implemented scroll 100% detection and event firing in BlogPost.astro',
        'Added platform-specific social link tracking in Footer.astro (using data-social-platform attribute)',
        'Detected contact form iframe interaction (window blur + activeElement check)'
      ],
      ja: [
        'BaseHead.astroにグローバルexternal_link_clickトラッキングを追加',
        'BlogPost.astroにスクロール100%到達検出とイベント発火を実装',
        'Footer.astroにプラットフォーム別ソーシャルリンクトラッキングを追加（data-social-platform属性を活用）',
        'お問い合わせフォームiframe相互作用を検出（window blur + activeElement チェック）'
      ]
    }
  },
  {
    date: '2025-10-05',
    completedDate: '2025-10-05',
    status: 'completed',
    title: {
      ko: 'Core Web Vitals 성능 최적화',
      en: 'Core Web Vitals Performance Optimization',
      ja: 'Core Web Vitals パフォーマンス最適化'
    },
    category: 'Technical',
    before: {
      metric: { ko: 'LCP / 페이지 크기', en: 'LCP / Page Size', ja: 'LCP / ページサイズ' },
      value: { ko: '~4초 / 3.5MB', en: '~4s / 3.5MB', ja: '~4秒 / 3.5MB' }
    },
    after: {
      metric: { ko: 'LCP / 페이지 크기', en: 'LCP / Page Size', ja: 'LCP / ページサイズ' },
      value: { ko: '~2초 / 1.5MB (예상)', en: '~2s / 1.5MB (estimated)', ja: '~2秒 / 1.5MB (予想)' }
    },
    impact: '+133%',
    impactType: 'positive',
    effort: { ko: '중간', en: 'Medium', ja: '中程度' },
    roi: { ko: '매우 높음', en: 'Very High', ja: '非常に高い' },
    sourceReport: `/${lang}/blog/${lang}/blog-launch-analysis-report`,
    description: {
      ko: 'Google Fonts 렌더링 차단 제거, 이미지 WebP 변환, lazy loading 적용으로 LCP 2초 개선 및 페이지 크기 57% 감소',
      en: 'Eliminated Google Fonts render-blocking, converted images to WebP, applied lazy loading - improved LCP by 2s and reduced page size by 57%',
      ja: 'Google Fontsのレンダーブロッキング削除、画像WebP変換、lazy loading適用でLCPを2秒改善、ページサイズを57%削減'
    },
    lessons: {
      ko: [
        'CSS @import 제거 → preconnect + async loading (FCP -1s)',
        '폰트 웨이트 17개 → 10개로 최적화 (-40%)',
        'Hero 이미지: PNG 1.2MB → WebP 300KB (loading=eager, fetchpriority=high)',
        'BlogCard 이미지: lazy loading + WebP 변환',
        'Astro 이미지 서비스 명시적 설정 (Sharp)',
        'CSS 코드 분할 및 인라인 최적화 (4KB 이하)',
        'OPTIMIZATION_RESULTS.md 문서화'
      ],
      en: [
        'Removed CSS @import → preconnect + async loading (FCP -1s)',
        'Optimized font weights from 17 to 10 (-40%)',
        'Hero images: PNG 1.2MB → WebP 300KB (loading=eager, fetchpriority=high)',
        'BlogCard images: lazy loading + WebP conversion',
        'Explicitly configured Astro image service (Sharp)',
        'CSS code splitting and inline optimization (<4KB)',
        'Documented in OPTIMIZATION_RESULTS.md'
      ],
      ja: [
        'CSS @import削除 → preconnect + async loading (FCP -1s)',
        'フォントウェイトを17から10に最適化（-40%）',
        'Heroイメージ：PNG 1.2MB → WebP 300KB（loading=eager、fetchpriority=high）',
        'BlogCardイメージ：lazy loading + WebP変換',
        'Astroイメージサービスを明示的に設定（Sharp）',
        'CSSコード分割とインライン最適化（<4KB）',
        'OPTIMIZATION_RESULTS.mdに文書化'
      ]
    }
  },
  {
    date: '2025-10-05',
    completedDate: '2025-10-05',
    status: 'completed',
    title: {
      ko: 'Chrome Lighthouse 성능 측정 및 검증',
      en: 'Chrome Lighthouse Performance Measurement & Validation',
      ja: 'Chrome Lighthouseパフォーマンス測定と検証'
    },
    category: 'Technical',
    before: {
      metric: { ko: '성능 점수', en: 'Performance Score', ja: 'パフォーマンススコア' },
      value: { ko: '측정 전', en: 'Before measurement', ja: '測定前' }
    },
    after: {
      metric: { ko: '성능 점수 (PC/Mobile)', en: 'Performance Score (PC/Mobile)', ja: 'パフォーマンススコア (PC/Mobile)' },
      value: { ko: '98/72점', en: '98/72', ja: '98/72点' }
    },
    impact: '+98%',
    impactType: 'positive',
    effort: { ko: '낮음', en: 'Low', ja: '低' },
    roi: { ko: '높음', en: 'High', ja: '高' },
    sourceReport: `/${lang}/blog/${lang}/blog-launch-analysis-report`,
    description: {
      ko: 'Chrome Lighthouse로 실제 성능 측정 완료. PC는 98점으로 목표 초과 달성, Mobile은 72점으로 네트워크 환경에 따른 개선 필요',
      en: 'Completed performance measurement with Chrome Lighthouse. PC achieved 98 points exceeding target, Mobile at 72 points needs improvement due to network conditions',
      ja: 'Chrome Lighthouseで実際のパフォーマンス測定完了。PCは98点で目標を超過達成、Mobileは72点でネットワーク環境による改善が必要'
    },
    lessons: {
      ko: [
        'PC: Performance 98/100 (목표 90+ 초과 달성)',
        'PC: LCP 0.97s, FCP 0.86s, CLS 0.0017 (모두 우수)',
        'Mobile: Performance 72/100 (LCP 4.85s로 개선 필요)',
        'Mobile: CLS 0.0009 (매우 우수, 레이아웃 안정성 확보)',
        'SEO 100/100, Accessibility 93/100, Best Practices 93/100',
        '모든 카테고리에서 90점 이상 달성 (SEO 만점)',
        'PC 환경에서는 최적화 목표 완전 달성',
        'Mobile LCP는 네트워크 및 디바이스 성능 영향 (추가 최적화 검토 필요)'
      ],
      en: [
        'PC: Performance 98/100 (exceeded target of 90+)',
        'PC: LCP 0.97s, FCP 0.86s, CLS 0.0017 (all excellent)',
        'Mobile: Performance 72/100 (needs improvement with LCP 4.85s)',
        'Mobile: CLS 0.0009 (excellent layout stability)',
        'SEO 100/100, Accessibility 93/100, Best Practices 93/100',
        'All categories achieved 90+ (perfect SEO score)',
        'Fully achieved optimization goals in PC environment',
        'Mobile LCP affected by network and device performance (further optimization needed)'
      ],
      ja: [
        'PC：Performance 98/100（目標90+を超過達成）',
        'PC：LCP 0.97s、FCP 0.86s、CLS 0.0017（すべて優秀）',
        'Mobile：Performance 72/100（LCP 4.85sで改善必要）',
        'Mobile：CLS 0.0009（非常に優秀、レイアウト安定性確保）',
        'SEO 100/100、Accessibility 93/100、Best Practices 93/100',
        'すべてのカテゴリで90点以上達成（SEO満点）',
        'PC環境では最適化目標を完全達成',
        'Mobile LCPはネットワークとデバイス性能の影響（追加最適化検討必要）'
      ]
    }
  },
  {
    date: '2025-10-05',
    completedDate: '2025-10-05',
    status: 'completed',
    title: {
      ko: '모바일 반응형 디자인 실제 디바이스 테스트',
      en: 'Mobile Responsive Design Real Device Testing',
      ja: 'モバイルレスポンシブデザイン実機テスト'
    },
    category: 'UX',
    before: {
      metric: { ko: '테스트 상태', en: 'Test Status', ja: 'テスト状態' },
      value: { ko: '미검증', en: 'Not verified', ja: '未検証' }
    },
    after: {
      metric: { ko: '테스트 완료', en: 'Test Completed', ja: 'テスト完了' },
      value: { ko: '모든 디바이스 ✓', en: 'All devices ✓', ja: '全デバイス ✓' }
    },
    impact: '+100%',
    impactType: 'positive',
    effort: { ko: '낮음', en: 'Low', ja: '低' },
    roi: { ko: '중간', en: 'Medium', ja: '中程度' },
    sourceReport: `/${lang}/blog/${lang}/blog-launch-analysis-report`,
    description: {
      ko: 'Chrome DevTools Device Mode 및 실제 디바이스에서 반응형 디자인 검증 완료. 모바일, 태블릿, 데스크톱 모든 해상도에서 정상 작동 확인',
      en: 'Completed responsive design validation using Chrome DevTools Device Mode and real devices. Confirmed proper functionality across mobile, tablet, and desktop resolutions',
      ja: 'Chrome DevTools Device Modeと実機でレスポンシブデザインの検証完了。モバイル、タブレット、デスクトップのすべての解像度で正常動作を確認'
    },
    lessons: {
      ko: [
        'Chrome DevTools Device Mode로 다양한 해상도 테스트',
        '실제 모바일 디바이스에서 터치 인터랙션 확인',
        '태블릿 레이아웃 (768px-1024px) 정상 작동',
        '모바일 레이아웃 (320px-767px) 정상 작동',
        '데스크톱 레이아웃 (1024px+) 정상 작동',
        '모든 해상도에서 레이아웃 깨짐 없음',
        '반응형 이미지 및 폰트 크기 적절히 조정됨'
      ],
      en: [
        'Tested various resolutions with Chrome DevTools Device Mode',
        'Verified touch interactions on real mobile devices',
        'Tablet layout (768px-1024px) working properly',
        'Mobile layout (320px-767px) working properly',
        'Desktop layout (1024px+) working properly',
        'No layout breaks across all resolutions',
        'Responsive images and font sizes properly adjusted'
      ],
      ja: [
        'Chrome DevTools Device Modeで様々な解像度をテスト',
        '実際のモバイルデバイスでタッチインタラクションを確認',
        'タブレットレイアウト（768px-1024px）正常動作',
        'モバイルレイアウト（320px-767px）正常動作',
        'デスクトップレイアウト（1024px+）正常動作',
        'すべての解像度でレイアウト崩れなし',
        'レスポンシブ画像とフォントサイズが適切に調整'
      ]
    }
  },
  {
    date: '2025-10-12',
    completedDate: '2025-10-08',
    status: 'completed',
    title: {
      ko: 'AI 기반 콘텐츠 추천 시스템 구축',
      en: 'AI-based Content Recommendation System Implementation',
      ja: 'AIベースのコンテンツ推薦システム構築'
    },
    category: 'Content',
    before: {
      metric: { ko: '관련 포스트 추천', en: 'Related Post Recommendations', ja: '関連記事推薦' },
      value: { ko: '없음', en: 'None', ja: 'なし' }
    },
    after: {
      metric: { ko: '관련 포스트 추천', en: 'Related Post Recommendations', ja: '関連記事推薦' },
      value: { ko: 'Claude LLM 기반 의미론적 추천', en: 'Claude LLM semantic recommendations', ja: 'Claude LLM ベースの意味論的推薦' }
    },
    impact: '+100%',
    impactType: 'positive',
    effort: { ko: '높음', en: 'High', ja: '高' },
    roi: { ko: '우수', en: 'Excellent', ja: '優秀' },
    description: {
      ko: 'Claude LLM을 활용한 의미론적 콘텐츠 추천 시스템 구축. 단순 태그 매칭을 넘어 콘텐츠의 맥락과 의미를 이해하여 정교한 추천 제공',
      en: 'Built semantic content recommendation system using Claude LLM. Provides sophisticated recommendations by understanding context and meaning beyond simple tag matching',
      ja: 'Claude LLMを活用した意味論的コンテンツ推薦システムを構築。単純なタグマッチングを超えてコンテンツの文脈と意味を理解し精巧な推薦を提供'
    },
    lessons: {
      ko: [
        'content-recommender 전문 에이전트 구축 (.claude/agents/)',
        '/generate-recommendations 커스텀 슬래시 커맨드 생성',
        'Claude LLM 기반 의미론적 유사도 분석 (TF-IDF 대체)',
        'recommendations.json 자동 생성 및 빌드 통합',
        'RelatedPosts.astro 컴포넌트 구현',
        'BlogPost 레이아웃에 추천 시스템 통합',
        '다국어 지원 (한국어, 영어, 일본어)',
        '포스트별 3-5개 관련 포스트 자동 추천',
        'TF-IDF vs 의미론적 분석 성능 비교 문서화',
        'working_history/content-recommendation-research.md 리서치 문서 작성'
      ],
      en: [
        'Built content-recommender specialized agent (.claude/agents/)',
        'Created /generate-recommendations custom slash command',
        'Claude LLM-based semantic similarity analysis (replacing TF-IDF)',
        'Automatic recommendations.json generation and build integration',
        'Implemented RelatedPosts.astro component',
        'Integrated recommendation system into BlogPost layout',
        'Multilingual support (Korean, English, Japanese)',
        'Auto-recommend 3-5 related posts per post',
        'Documented TF-IDF vs semantic analysis performance comparison',
        'Created working_history/content-recommendation-research.md research document'
      ],
      ja: [
        'content-recommender専門エージェント構築（.claude/agents/）',
        '/generate-recommendationsカスタムスラッシュコマンド作成',
        'Claude LLMベースの意味論的類似度分析（TF-IDF代替）',
        'recommendations.json自動生成とビルド統合',
        'RelatedPosts.astroコンポーネント実装',
        'BlogPostレイアウトに推薦システム統合',
        '多言語サポート（韓国語、英語、日本語）',
        '記事ごとに3-5件の関連記事を自動推薦',
        'TF-IDF vs 意味論的分析パフォーマンス比較文書化',
        'working_history/content-recommendation-research.mdリサーチドキュメント作成'
      ]
    }
  },
  {
    date: '2025-10-13',
    completedDate: '2025-10-13',
    status: 'completed',
    title: {
      ko: '추천 시스템 토큰 사용량 최적화',
      en: 'Recommendation System Token Usage Optimization',
      ja: '推薦システムトークン使用量最適化'
    },
    category: 'Technical',
    before: {
      metric: { ko: '토큰 사용량 / 실행 시간', en: 'Token Usage / Execution Time', ja: 'トークン使用量 / 実行時間' },
      value: { ko: '78,000 토큰 / 2.7분', en: '78,000 tokens / 2.7min', ja: '78,000トークン / 2.7分' }
    },
    after: {
      metric: { ko: '토큰 사용량 / 실행 시간', en: 'Token Usage / Execution Time', ja: 'トークン使用量 / 実行時間' },
      value: { ko: '0 토큰 / <1초', en: '0 tokens / <1s', ja: '0トークン / <1秒' }
    },
    impact: '+100%',
    impactType: 'positive',
    effort: { ko: '높음', en: 'High', ja: '高' },
    roi: { ko: '탁월함', en: 'Exceptional', ja: '卓越' },
    description: {
      ko: '메타데이터 기반 알고리즘으로 전환하여 추천 생성 시 토큰 사용량 100% 제거 및 실행 시간 99% 단축. LLM API 호출 대신 Jaccard/Cosine 유사도 알고리즘 사용',
      en: 'Achieved 100% token elimination and 99% execution time reduction by switching to metadata-based algorithm. Uses Jaccard/Cosine similarity instead of LLM API calls',
      ja: 'メタデータベースのアルゴリズムに切り替えて推薦生成時のトークン使用量を100%削減、実行時間を99%短縮。LLM APIコールの代わりにJaccard/Cosine類似度アルゴリズムを使用'
    },
    lessons: {
      ko: [
        'post-analyzer 에이전트 구축 (.claude/agents/post-analyzer.md)',
        '/analyze-posts 커맨드로 post-metadata.json 수동 생성 (13개 포스트, 0 토큰)',
        '메타데이터 구조: 200자 요약 + 5개 주제 + 5개 기술 스택 + 난이도(1-5) + 카테고리 점수',
        'SHA-256 콘텐츠 해시로 변경 감지 (증분 업데이트 지원)',
        '동일 내용의 다국어 포스트 중 ko 언어만 분석 (3배 효율화)',
        '**실제 성과 (예상 초과):**',
        '  - 토큰: 78,000 → 0 (100% 제거, 예상 63% 초과)',
        '  - 시간: 2.7분 → <1초 (99% 단축, 예상 59% 초과)',
        '  - 비용: $0.078 → $0.00 (100% 절감)',
        '**알고리즘 기반 추천 시스템:**',
        '  - Jaccard 유사도: 토픽(35%), 기술 스택(25%)',
        '  - Cosine 유사도: 카테고리 점수(20%)',
        '  - 난이도 매칭(10%), 보완 관계(10%)',
        '  - 결정론적, 즉시 실행, 비용 제로',
        '총 65개 추천 생성 (포스트당 평균 5개)',
        '시간론적 필터링 (과거 포스트만 추천)',
        '3개 언어 설명 자동 생성 (ko/ja/en)',
        'working_history/modify_recommendation.md 상세 문서화'
      ],
      en: [
        'Built post-analyzer agent (.claude/agents/post-analyzer.md)',
        'Manually created post-metadata.json via /analyze-posts (13 posts, 0 tokens)',
        'Metadata structure: 200-char summary + 5 topics + 5 tech stack + difficulty(1-5) + category scores',
        'SHA-256 content hash for change detection (incremental updates)',
        'Analyze only Korean posts (3x efficiency gain)',
        '**Actual Results (exceeded expectations):**',
        '  - Tokens: 78,000 → 0 (100% elimination, exceeded 63% target)',
        '  - Time: 2.7min → <1s (99% reduction, exceeded 59% target)',
        '  - Cost: $0.078 → $0.00 (100% savings)',
        '**Algorithm-based Recommendation System:**',
        '  - Jaccard similarity: topics(35%), tech stack(25%)',
        '  - Cosine similarity: category scores(20%)',
        '  - Difficulty matching(10%), complementary(10%)',
        '  - Deterministic, instant execution, zero cost',
        'Generated 65 recommendations (avg 5 per post)',
        'Temporal filtering (only past posts recommended)',
        'Auto-generated trilingual explanations (ko/ja/en)',
        'Documented in working_history/modify_recommendation.md'
      ],
      ja: [
        'post-analyzerエージェント構築（.claude/agents/post-analyzer.md）',
        '/analyze-postsで手動でpost-metadata.jsonを作成（13記事、0トークン）',
        'メタデータ構造：200文字要約 + 5つのトピック + 5つの技術スタック + 難易度(1-5) + カテゴリスコア',
        'SHA-256コンテンツハッシュで変更検出（増分更新サポート）',
        '同一内容の多言語ポストの中でko言語のみ分析（3倍効率化）',
        '**実際の成果（予想超過）：**',
        '  - トークン：78,000 → 0（100%削除、予想63%超過）',
        '  - 時間：2.7分 → <1秒（99%短縮、予想59%超過）',
        '  - コスト：$0.078 → $0.00（100%削減）',
        '**アルゴリズムベース推薦システム：**',
        '  - Jaccard類似度：トピック(35%)、技術スタック(25%)',
        '  - Cosine類似度：カテゴリスコア(20%)',
        '  - 難易度マッチング(10%)、補完関係(10%)',
        '  - 決定論的、即時実行、コストゼロ',
        '合計65件の推薦を生成（記事あたり平均5件）',
        '時系列フィルタリング（過去の記事のみ推薦）',
        '3言語説明を自動生成（ko/ja/en）',
        'working_history/modify_recommendation.mdに詳細文書化'
      ]
    }
  },
  // Planned improvements from weekly analytics report (2025-10-14)
  {
    date: '2025-10-16',
    status: 'planned',
    title: {
      ko: 'Google Search Console 사이트맵 제출',
      en: 'Google Search Console Sitemap Submission',
      ja: 'Google Search Consoleサイトマップ提出'
    },
    category: 'SEO',
    target: {
      metric: { ko: '인덱싱된 페이지', en: 'Indexed Pages', ja: 'インデックスされたページ' },
      value: { ko: '20개 이상', en: '20+', ja: '20以上' }
    },
    effort: { ko: '낮음', en: 'Low', ja: '低' },
    roi: { ko: '매우 높음', en: 'Very High', ja: '非常に高い' },
    sourceReport: `/${lang}/blog/${lang}/weekly-analytics-2025-10-14`,
    description: {
      ko: 'Google Search Console과 Bing Webmaster Tools에 사이트맵 제출하여 검색 엔진 인덱싱 시작',
      en: 'Submit sitemap to Google Search Console and Bing Webmaster Tools to initiate search engine indexing',
      ja: 'Google Search ConsoleとBing Webmaster Toolsにサイトマップを提出して検索エンジンインデックスを開始'
    },
    expectedImpact: { ko: '7-14일 내 오가닉 검색 4.3% → 5-10%', en: 'Organic search 4.3% → 5-10% within 7-14 days', ja: '7-14日以内にオーガニック検索4.3% → 5-10%' }
  },
  {
    date: '2025-10-16',
    status: 'planned',
    title: {
      ko: '재방문자 설문조사 실시',
      en: 'Returning User Survey',
      ja: 'リピーター調査実施'
    },
    category: 'Content',
    target: {
      metric: { ko: '응답률', en: 'Response Rate', ja: '回答率' },
      value: { ko: '50% 이상', en: '50%+', ja: '50%以上' }
    },
    effort: { ko: '낮음', en: 'Low', ja: '低' },
    roi: { ko: '매우 높음', en: 'Very High', ja: '非常に高い' },
    sourceReport: `/${lang}/blog/${lang}/weekly-analytics-2025-10-14`,
    description: {
      ko: '6명의 재방문자에게 설문조사를 실시하여 콘텐츠 전략 수립에 필요한 질적 인사이트 수집',
      en: 'Conduct survey with 6 returning users to gather qualitative insights for content strategy',
      ja: '6人のリピーターに調査を実施してコンテンツ戦略に必要な質的インサイトを収集'
    },
    expectedImpact: { ko: '3개 주요 테마 식별, 콘텐츠 전략 방향 설정', en: 'Identify 3 key themes, set content strategy direction', ja: '3つの主要テーマを特定、コンテンツ戦略の方向性設定' }
  },
  {
    date: '2025-10-20',
    status: 'planned',
    title: {
      ko: '소셜 미디어 계정 생성 및 활성화',
      en: 'Social Media Account Creation & Activation',
      ja: 'ソーシャルメディアアカウント作成と活性化'
    },
    category: 'Traffic',
    target: {
      metric: { ko: '소셜 트래픽', en: 'Social Traffic', ja: 'ソーシャルトラフィック' },
      value: { ko: '5%', en: '5%', ja: '5%' }
    },
    effort: { ko: '중간', en: 'Medium', ja: '中程度' },
    roi: { ko: '높음', en: 'High', ja: '高' },
    sourceReport: `/${lang}/blog/${lang}/weekly-analytics-2025-10-14`,
    description: {
      ko: 'Twitter/X, LinkedIn 계정 생성 및 주 3회 포스팅 스케줄 설정',
      en: 'Create Twitter/X and LinkedIn accounts, establish 3x/week posting schedule',
      ja: 'Twitter/X、LinkedInアカウントを作成し週3回の投稿スケジュールを設定'
    },
    expectedImpact: { ko: '다크 런칭 탈출, 소셜 트래픽 0% → 5%', en: 'Exit dark launch, social traffic 0% → 5%', ja: 'ダークローンチ脱出、ソーシャルトラフィック0% → 5%' }
  },
  {
    date: '2025-10-25',
    status: 'planned',
    title: {
      ko: '내부 링크 전략 실행',
      en: 'Internal Linking Strategy Implementation',
      ja: '内部リンク戦略実行'
    },
    category: 'SEO',
    target: {
      metric: { ko: '세션당 페이지뷰', en: 'Pages per Session', ja: 'セッションあたりのページビュー' },
      value: { ko: '5.0', en: '5.0', ja: '5.0' }
    },
    effort: { ko: '중간', en: 'Medium', ja: '中程度' },
    roi: { ko: '높음', en: 'High', ja: '高' },
    sourceReport: `/${lang}/blog/${lang}/weekly-analytics-2025-10-14`,
    description: {
      ko: '각 블로그 포스트에 2-3개의 관련 글 링크를 추가하여 SEO 및 사용자 경험 개선',
      en: 'Add 2-3 related post links to each blog post to improve SEO and user experience',
      ja: '各ブログ記事に2-3件の関連記事リンクを追加してSEOとユーザー体験を改善'
    },
    expectedImpact: { ko: '세션당 페이지뷰 4.07 → 5.0 (다음 달)', en: 'Pages/session 4.07 → 5.0 (next month)', ja: 'ページ/セッション4.07 → 5.0（来月）' }
  },
  {
    date: '2025-10-30',
    status: 'planned',
    title: {
      ko: '이메일 뉴스레터 가입 폼 추가',
      en: 'Newsletter Subscription Form Implementation',
      ja: 'ニュースレター購読フォーム追加'
    },
    category: 'Content',
    target: {
      metric: { ko: '구독 전환율', en: 'Subscription Rate', ja: '購読転換率' },
      value: { ko: '2%', en: '2%', ja: '2%' }
    },
    effort: { ko: '중간', en: 'Medium', ja: '中程度' },
    roi: { ko: '높음', en: 'High', ja: '高' },
    sourceReport: `/${lang}/blog/${lang}/weekly-analytics-2025-10-14`,
    description: {
      ko: '블로그 포스트 및 주요 페이지에 Newsletter 구독 CTA 추가 (Substack/Mailchimp/ConvertKit)',
      en: 'Add Newsletter subscription CTA to blog posts and key pages (Substack/Mailchimp/ConvertKit)',
      ja: 'ブログ記事と主要ページにニュースレター購読CTAを追加（Substack/Mailchimp/ConvertKit）'
    },
    expectedImpact: { ko: '방문자 대비 전환율 2% (한 달 목표)', en: '2% conversion rate (1 month target)', ja: '訪問者比転換率2%（1ヶ月目標）' }
  },
  {
    date: '2025-11-01',
    status: 'planned',
    title: {
      ko: 'Top 3 포스트 일본어 번역',
      en: 'Top 3 Posts Japanese Translation',
      ja: 'トップ3記事の日本語翻訳'
    },
    category: 'Content',
    target: {
      metric: { ko: '일본 트래픽', en: 'Japan Traffic', ja: '日本トラフィック' },
      value: { ko: '35%', en: '35%', ja: '35%' }
    },
    effort: { ko: '높음', en: 'High', ja: '高' },
    roi: { ko: '우수', en: 'Excellent', ja: '優秀' },
    sourceReport: `/${lang}/blog/${lang}/weekly-analytics-2025-10-14`,
    description: {
      ko: 'AI 발표 자료 자동화, Notion API MCP, Claude Code 웹 자동화 포스트를 일본어로 번역',
      en: 'Translate AI presentation automation, Notion API MCP, and Claude Code web automation posts to Japanese',
      ja: 'AI発表資料自動化、Notion API MCP、Claude Codeウェブ自動化記事を日本語に翻訳'
    },
    expectedImpact: { ko: '일본 트래픽 29% → 35% (다음 달)', en: 'Japan traffic 29% → 35% (next month)', ja: '日本トラフィック29% → 35%（来月）' }
  },
  {
    date: '2026-01-15',
    status: 'planned',
    title: {
      ko: 'Guest Post 전략 수립',
      en: 'Guest Post Strategy Development',
      ja: 'ゲストポスト戦略策定'
    },
    category: 'SEO',
    target: {
      metric: { ko: '백링크', en: 'Backlinks', ja: 'バックリンク' },
      value: { ko: '10개', en: '10', ja: '10個' }
    },
    effort: { ko: '높음', en: 'High', ja: '高' },
    roi: { ko: '매우 높음', en: 'Very High', ja: '非常に高い' },
    sourceReport: `/${lang}/blog/${lang}/weekly-analytics-2025-10-14`,
    description: {
      ko: '10개 타겟 기술 블로그 선정 및 아웃리치, 월 1개 guest post 기고',
      en: 'Select 10 target tech blogs and outreach, publish 1 guest post per month',
      ja: '10の対象技術ブログを選定してアウトリーチ、月1件のゲストポスト寄稿'
    },
    expectedImpact: { ko: '레퍼럴 트래픽 15%, 백링크 10개 확보', en: '15% referral traffic, acquire 10 backlinks', ja: 'リファラルトラフィック15%、バックリンク10件獲得' }
  },
  {
    date: '2026-02-28',
    status: 'planned',
    title: {
      ko: '일본 시장 전략 수립',
      en: 'Japan Market Strategy Development',
      ja: '日本市場戦略策定'
    },
    category: 'Traffic',
    target: {
      metric: { ko: '일본 트래픽', en: 'Japan Traffic', ja: '日本トラフィック' },
      value: { ko: '40%', en: '40%', ja: '40%' }
    },
    effort: { ko: '높음', en: 'High', ja: '高' },
    roi: { ko: '우수', en: 'Excellent', ja: '優秀' },
    sourceReport: `/${lang}/blog/${lang}/weekly-analytics-2025-10-14`,
    description: {
      ko: 'Qiita, Zenn 크로스 포스팅 및 일본 기술 블로거와 파트너십 구축',
      en: 'Cross-post to Qiita and Zenn, establish partnerships with Japanese tech bloggers',
      ja: 'QiitaとZennにクロスポスト、日本の技術ブロガーとパートナーシップ構築'
    },
    expectedImpact: { ko: '일본 트래픽 40% 이상, Qiita followers 100명', en: 'Japan traffic 40%+, 100 Qiita followers', ja: '日本トラフィック40%以上、Qiitaフォロワー100人' }
  },
  {
    date: '2026-03-31',
    status: 'planned',
    title: {
      ko: 'YouTube 채널 구축',
      en: 'YouTube Channel Launch',
      ja: 'YouTubeチャネル構築'
    },
    category: 'Content',
    target: {
      metric: { ko: 'YouTube → 블로그 유입', en: 'YouTube → Blog Traffic', ja: 'YouTube → ブログ流入' },
      value: { ko: '10%', en: '10%', ja: '10%' }
    },
    effort: { ko: '매우 높음', en: 'Very High', ja: '非常に高い' },
    roi: { ko: '우수', en: 'Excellent', ja: '優秀' },
    sourceReport: `/${lang}/blog/${lang}/weekly-analytics-2025-10-14`,
    description: {
      ko: '블로그 포스트 요약 + 데모 영상 (5-10분 튜토리얼 형식) 제작 및 배포',
      en: 'Create and publish blog post summaries + demo videos (5-10 min tutorial format)',
      ja: 'ブログ記事要約 + デモ動画（5-10分チュートリアル形式）を制作して配信'
    },
    expectedImpact: { ko: 'YouTube → 블로그 유입 10%, 구독자 500명 (첫 해)', en: 'YouTube → Blog 10%, 500 subscribers (first year)', ja: 'YouTube → ブログ流入10%、登録者500人（初年度）' }
  },
  // Planned improvements from blog launch analysis report
  {
    date: '2025-12-31',
    status: 'planned',
    title: {
      ko: 'SEO 키워드 최적화',
      en: 'SEO Keyword Optimization',
      ja: 'SEOキーワード最適化'
    },
    category: 'SEO',
    target: {
      metric: { ko: 'Organic Search', en: 'Organic Search', ja: 'オーガニック検索' },
      value: { ko: '40%', en: '40%', ja: '40%' }
    },
    effort: { ko: '높음', en: 'High', ja: '高' },
    roi: { ko: '매우 높음', en: 'Very High', ja: '非常に高い' },
    sourceReport: `/${lang}/blog/${lang}/blog-launch-analysis-report`,
    description: {
      ko: '키워드 리서치 및 콘텐츠 최적화를 통한 자연 검색 트래픽 증대',
      en: 'Increase organic search traffic through keyword research and content optimization',
      ja: 'キーワードリサーチとコンテンツ最適化によるオーガニック検索トラフィックの増加'
    },
    expectedImpact: { ko: '유입 채널 다변화 및 지속 가능한 트래픽 확보', en: 'Traffic channel diversification and sustainable traffic acquisition', ja: 'トラフィックチャネルの多様化と持続可能なトラフィック確保' }
  },
  {
    date: '2025-12-31',
    status: 'planned',
    title: {
      ko: '소셜 미디어 활성화',
      en: 'Social Media Activation',
      ja: 'ソーシャルメディア活性化'
    },
    category: 'Traffic',
    target: {
      metric: { ko: '활성 채널', en: 'Active Channels', ja: 'アクティブチャネル' },
      value: { ko: '2개 이상', en: '2+', ja: '2つ以上' }
    },
    effort: { ko: '중간', en: 'Medium', ja: '中程度' },
    roi: { ko: '우수', en: 'Excellent', ja: '優秀' },
    sourceReport: `/${lang}/blog/${lang}/blog-launch-analysis-report`,
    description: {
      ko: 'LinkedIn, Twitter(X) 등 소셜 미디어 채널 활성화 및 콘텐츠 배포',
      en: 'Activate social media channels like LinkedIn and Twitter(X) for content distribution',
      ja: 'LinkedInやTwitter(X)などのソーシャルメディアチャネルを活性化してコンテンツ配信'
    },
    expectedImpact: { ko: '소셜 트래픽 20% 달성', en: 'Achieve 20% social traffic', ja: 'ソーシャルトラフィック20%達成' }
  },
  {
    date: '2025-12-31',
    status: 'planned',
    title: {
      ko: 'Newsletter CTA 추가',
      en: 'Add Newsletter CTA',
      ja: 'ニュースレターCTA追加'
    },
    category: 'Content',
    target: {
      metric: { ko: '구독 전환율', en: 'Subscription Rate', ja: '購読転換率' },
      value: { ko: '5%', en: '5%', ja: '5%' }
    },
    effort: { ko: '낮음', en: 'Low', ja: '低' },
    roi: { ko: '높음', en: 'High', ja: '高' },
    sourceReport: `/${lang}/blog/${lang}/blog-launch-analysis-report`,
    description: {
      ko: '블로그 포스트 및 주요 페이지에 Newsletter 구독 CTA 추가',
      en: 'Add Newsletter subscription CTA to blog posts and key pages',
      ja: 'ブログ記事と主要ページにニュースレター購読CTAを追加'
    },
    expectedImpact: { ko: '독자 유지율 향상 및 재방문 유도', en: 'Improved reader retention and return visits', ja: '読者維持率向上とリピート訪問誘導' }
  },
];

// Split improvements by status
const plannedImprovements = improvements.filter(i => i.status === 'planned');
const completedImprovements = improvements
  .filter(i => i.status === 'completed')
  .sort((a, b) => {
    // Sort by completedDate in descending order (most recent first)
    const dateA = a.completedDate ? new Date(a.completedDate).getTime() : 0;
    const dateB = b.completedDate ? new Date(b.completedDate).getTime() : 0;
    return dateB - dateA;
  });
const inProgressImprovements = improvements.filter(i => i.status === 'in-progress');

const categories = {
  'Traffic': improvements.filter(i => i.category === 'Traffic'),
  'Content': improvements.filter(i => i.category === 'Content'),
  'SEO': improvements.filter(i => i.category === 'SEO'),
  'UX': improvements.filter(i => i.category === 'UX'),
  'Technical': improvements.filter(i => i.category === 'Technical'),
};

const metrics = {
  totalPlanned: plannedImprovements.length,
  totalInProgress: inProgressImprovements.length,
  totalCompleted: completedImprovements.length,
  avgImpact: completedImprovements.length > 0
    ? (completedImprovements.reduce((sum, i) => sum + parseFloat(i.impact || 0), 0) / completedImprovements.length).toFixed(1)
    : 0,
  topCategory: Object.entries(categories).sort((a, b) => b[1].length - a[1].length)[0]?.[0] || 'N/A'
};

// Translations
const translations = {
  title: {
    ko: '점진적 사이트 개선 히스토리',
    en: 'Progressive Site Improvement History',
    ja: '段階的サイト改善履歴'
  },
  description: {
    ko: '데이터 기반의 지속적인 사이트 개선 과정과 성과를 투명하게 공유합니다',
    en: 'Transparently sharing data-driven continuous site improvement processes and results',
    ja: 'データに基づいた継続的なサイト改善プロセスと成果を透明に共有します'
  },
  stats: {
    planned: { ko: '계획됨', en: 'Planned', ja: '計画済み' },
    inProgress: { ko: '진행 중', en: 'In Progress', ja: '進行中' },
    completed: { ko: '완료됨', en: 'Completed', ja: '完了' },
    avgImpact: { ko: '평균 개선 효과', en: 'Average Impact', ja: '平均改善効果' },
    topCategory: { ko: '최다 개선 카테고리', en: 'Top Category', ja: '最多改善カテゴリ' }
  },
  sections: {
    planned: { ko: '계획된 개선사항', en: 'Planned Improvements', ja: '計画された改善事項' },
    inProgress: { ko: '진행 중인 개선사항', en: 'In Progress', ja: '進行中の改善事項' },
    completed: { ko: '완료된 개선사항', en: 'Completed Improvements', ja: '完了した改善事項' }
  },
  emptyState: {
    title: {
      ko: '아직 개선 사항이 기록되지 않았습니다',
      en: 'No improvements recorded yet',
      ja: 'まだ改善事項が記録されていません'
    },
    subtitle: {
      ko: '첫 번째 분석 리포트를 생성하고 개선 작업을 시작해보세요!',
      en: 'Generate your first analytics report and start improvement work!',
      ja: '最初の分析レポートを生成して改善作業を始めましょう！'
    },
    steps: {
      ko: [
        '1. analytics-reporter 에이전트로 첫 리포트 생성',
        '2. improvement-tracker 에이전트로 액션 플랜을 TODO로 변환',
        '3. 개선 작업 완료 후 결과 기록'
      ],
      en: [
        '1. Generate first report with analytics-reporter agent',
        '2. Convert action plan to TODOs with improvement-tracker agent',
        '3. Complete improvements and record results'
      ],
      ja: [
        '1. analytics-reporterエージェントで最初のレポートを生成',
        '2. improvement-trackerエージェントでアクションプランをTODOに変換',
        '3. 改善作業完了後、結果を記録'
      ]
    }
  },
  filters: {
    all: { ko: '전체', en: 'All', ja: '全て' },
    traffic: { ko: '트래픽', en: 'Traffic', ja: 'トラフィック' },
    content: { ko: '콘텐츠', en: 'Content', ja: 'コンテンツ' },
    seo: { ko: 'SEO', en: 'SEO', ja: 'SEO' },
    ux: { ko: 'UX', en: 'UX', ja: 'UX' },
    technical: { ko: '기술', en: 'Technical', ja: '技術' }
  },
  metrics: {
    target: { ko: '목표', en: 'Target', ja: '目標' },
    before: { ko: '개선 전', en: 'Before', ja: '改善前' },
    after: { ko: '개선 후', en: 'After', ja: '改善後' },
    impact: { ko: '효과', en: 'Impact', ja: '効果' },
    expectedImpact: { ko: '예상 효과', en: 'Expected Impact', ja: '予想効果' },
    effort: { ko: '투입', en: 'Effort', ja: '投入' },
    roi: { ko: 'ROI', en: 'ROI', ja: 'ROI' },
    date: { ko: '목표일', en: 'Target Date', ja: '目標日' },
    status: { ko: '상태', en: 'Status', ja: 'ステータス' }
  },
  lessons: {
    title: { ko: '배운 점', en: 'Lessons Learned', ja: '学んだこと' }
  },
  sourceReport: {
    ko: '출처 리포트 보기',
    en: 'View Source Report',
    ja: 'ソースレポートを見る'
  },
  dataSection: {
    title: { ko: '데이터 출처 및 관리', en: 'Data Sources & Management', ja: 'データソースと管理' },
    analytics: { ko: '분석 도구', en: 'Analytics Tool', ja: '分析ツール' },
    reports: { ko: '리포트', en: 'Reports', ja: 'レポート' },
    todos: { ko: 'TODO 관리', en: 'TODO Management', ja: 'TODO管理' },
    autoUpdate: { ko: '자동 업데이트', en: 'Auto Update', ja: '自動更新' },
    description: {
      ko: '이 페이지는 블로그의 지속적인 개선 과정을 투명하게 공유하기 위해 만들어졌습니다. 모든 개선사항은 데이터에 기반하며, 실제 측정된 결과를 기록합니다.',
      en: 'This page was created to transparently share the continuous improvement process of the blog. All improvements are data-driven and record actual measured results.',
      ja: 'このページはブログの継続的な改善プロセスを透明に共有するために作成されました。すべての改善はデータに基づいており、実際に測定された結果を記録します。'
    }
  }
};

const tt = (key: any) => {
  if (typeof key === 'object' && key !== null) {
    return key[lang] || key['en'] || '';
  }
  return key;
};
---

<!doctype html>
<html lang={lang}>
	<head>
		<BaseHead
			title={`${tt(translations.title)} - ${t('site.title')}`}
			description={tt(translations.description)}
		/>
		<style>
			.improvement-grid {
				display: grid;
				gap: 2rem;
				margin-top: 2rem;
			}

			.improvement-card {
				border: 1px solid var(--gray-200);
				border-radius: 8px;
				padding: 1.5rem;
				background: var(--gray-50);
				transition: transform 0.2s, box-shadow 0.2s;
			}

			.improvement-card:hover {
				transform: translateY(-2px);
				box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
			}

			.card-header {
				display: flex;
				justify-content: space-between;
				align-items: start;
				margin-bottom: 1rem;
			}

			.card-title {
				font-size: 1.25rem;
				font-weight: 600;
				margin: 0;
			}

			.category-badge {
				padding: 0.25rem 0.75rem;
				border-radius: 12px;
				font-size: 0.875rem;
				font-weight: 500;
			}

			.category-traffic { background: #e0f2fe; color: #0369a1; }
			.category-content { background: #fce7f3; color: #9f1239; }
			.category-seo { background: #dcfce7; color: #15803d; }
			.category-ux { background: #fef3c7; color: #a16207; }
			.category-technical { background: #e0e7ff; color: #4338ca; }

			.metrics-row {
				display: flex;
				gap: 1rem;
				margin: 1rem 0;
				flex-wrap: wrap;
			}

			.metric {
				display: flex;
				align-items: center;
				gap: 0.5rem;
				padding: 0.5rem 1rem;
				background: white;
				border-radius: 6px;
				font-size: 0.875rem;
			}

			.metric-label {
				color: var(--gray-600);
			}

			.metric-value {
				font-weight: 600;
			}

			.impact-positive {
				color: #15803d;
			}

			.impact-negative {
				color: #dc2626;
			}

			.timeline {
				position: relative;
				padding-left: 2rem;
			}

			.timeline::before {
				content: '';
				position: absolute;
				left: 0.5rem;
				top: 0;
				bottom: 0;
				width: 2px;
				background: var(--gray-300);
			}

			.timeline-item {
				position: relative;
				margin-bottom: 2rem;
			}

			.timeline-item::before {
				content: '';
				position: absolute;
				left: -1.5rem;
				top: 0.5rem;
				width: 12px;
				height: 12px;
				border-radius: 50%;
				background: var(--accent);
				border: 2px solid white;
			}

			.before-after {
				display: grid;
				grid-template-columns: 1fr auto 1fr;
				gap: 1rem;
				align-items: center;
				margin: 1rem 0;
				padding: 1rem;
				background: white;
				border-radius: 6px;
			}

			.before, .after {
				text-align: center;
			}

			.arrow {
				font-size: 1.5rem;
				color: var(--gray-400);
			}

			.value {
				font-size: 1.5rem;
				font-weight: 700;
			}

			.lessons {
				margin-top: 1rem;
				padding: 1rem;
				background: #fef9c3;
				border-left: 3px solid #facc15;
				border-radius: 4px;
			}

			.lessons-title {
				font-weight: 600;
				margin-bottom: 0.5rem;
				color: #a16207;
			}

			.lessons ul {
				margin: 0;
				padding-left: 1.5rem;
			}

			.empty-state {
				text-align: center;
				padding: 4rem 2rem;
				color: var(--gray-500);
			}

			.empty-state-icon {
				font-size: 4rem;
				margin-bottom: 1rem;
			}

			.stats-grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
				gap: 1.5rem;
				margin: 2rem 0;
			}

			.stat-card {
				padding: 1.5rem;
				background: white;
				border-radius: 8px;
				box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
			}

			.stat-value {
				font-size: 2rem;
				font-weight: 700;
				color: var(--accent);
			}

			.stat-label {
				margin-top: 0.5rem;
				color: var(--gray-600);
				font-size: 0.875rem;
			}

			.filter-tabs {
				display: flex;
				gap: 0.5rem;
				margin: 2rem 0;
				border-bottom: 2px solid var(--gray-200);
				padding-bottom: 0;
				flex-wrap: wrap;
			}

			.filter-tab {
				padding: 0.75rem 1.5rem;
				background: none;
				border: none;
				cursor: pointer;
				color: var(--gray-600);
				font-weight: 500;
				border-bottom: 2px solid transparent;
				margin-bottom: -2px;
				transition: all 0.2s;
			}

			.filter-tab:hover {
				color: var(--accent);
			}

			.filter-tab.active {
				color: var(--accent);
				border-bottom-color: var(--accent);
			}

			.data-section {
				margin-top: 4rem;
				padding: 2rem;
				background: var(--gray-50);
				border-radius: 8px;
			}
		</style>
	</head>
	<body>
		<Header lang={lang} />
		<main class="max-w-6xl mx-auto px-4 py-12">
			<section>
				<div class="mb-8">
					<h1 class="text-4xl font-bold mb-4">🚀 {tt(translations.title)}</h1>
					<p class="text-xl text-gray-600">{tt(translations.description)}</p>
				</div>

				<!-- Summary Stats -->
				<div class="stats-grid">
					<div class="stat-card">
						<div class="stat-value">{metrics.totalPlanned}</div>
						<div class="stat-label">{tt(translations.stats.planned)}</div>
					</div>
					<div class="stat-card">
						<div class="stat-value">{metrics.totalInProgress}</div>
						<div class="stat-label">{tt(translations.stats.inProgress)}</div>
					</div>
					<div class="stat-card">
						<div class="stat-value">{metrics.totalCompleted}</div>
						<div class="stat-label">{tt(translations.stats.completed)}</div>
					</div>
					<div class="stat-card">
						<div class="stat-value">{metrics.topCategory}</div>
						<div class="stat-label">{tt(translations.stats.topCategory)}</div>
					</div>
				</div>

				{improvements.length === 0 ? (
					<div class="empty-state">
						<div class="empty-state-icon">📊</div>
						<h2 class="text-2xl font-bold mb-4">{tt(translations.emptyState.title)}</h2>
						<p class="text-lg mb-6">{tt(translations.emptyState.subtitle)}</p>
						<div class="text-left max-w-2xl mx-auto">
							<p class="font-semibold mb-2">{lang === 'ko' ? '다음 단계:' : lang === 'ja' ? '次のステップ:' : 'Next Steps:'}</p>
							<ul class="list-disc list-inside space-y-2">
								{tt(translations.emptyState.steps).map((step: string) => (
									<li>{step}</li>
								))}
							</ul>
						</div>
					</div>
				) : (
					<>
						<!-- Category Filters -->
						<div class="filter-tabs">
							<button class="filter-tab active" data-category="all">{tt(translations.filters.all)}</button>
							<button class="filter-tab" data-category="Traffic">{tt(translations.filters.traffic)}</button>
							<button class="filter-tab" data-category="Content">{tt(translations.filters.content)}</button>
							<button class="filter-tab" data-category="SEO">{tt(translations.filters.seo)}</button>
							<button class="filter-tab" data-category="UX">{tt(translations.filters.ux)}</button>
							<button class="filter-tab" data-category="Technical">{tt(translations.filters.technical)}</button>
						</div>

						<!-- Planned Improvements Section -->
						{plannedImprovements.length > 0 && (
							<div style="margin-top: 3rem;">
								<h2 class="text-3xl font-bold mb-4">📋 {tt(translations.sections.planned)}</h2>
								<div class="timeline">
									{plannedImprovements.map((item) => (
										<div class="timeline-item" data-category={item.category}>
											<div class="improvement-card" style="background: #fefce8; border-color: #facc15;">
												<div class="card-header">
													<h3 class="card-title">{tt(item.title)}</h3>
													<span class={`category-badge category-${item.category.toLowerCase()}`}>
														{item.category}
													</span>
												</div>

												<p>{tt(item.description)}</p>

												<!-- Target (for planned items) -->
												<div class="before-after" style="background: white;">
													<div class="before" style="grid-column: 1 / -1; text-align: left;">
														<div class="metric-label">{tt(translations.metrics.target)}</div>
														<div class="value" style="color: #0369a1;">{tt(item.target.value)}</div>
														<div class="metric-label">{tt(item.target.metric)}</div>
													</div>
												</div>

												<div class="metrics-row">
													<div class="metric">
														<span class="metric-label">{tt(translations.metrics.effort)}:</span>
														<span class="metric-value">{tt(item.effort)}</span>
													</div>
													<div class="metric">
														<span class="metric-label">{tt(translations.metrics.roi)}:</span>
														<span class="metric-value">{tt(item.roi)}</span>
													</div>
													<div class="metric">
														<span class="metric-label">{tt(translations.metrics.date)}:</span>
														<span class="metric-value">{item.date}</span>
													</div>
												</div>

												{item.expectedImpact && (
													<div style="margin-top: 1rem; padding: 0.75rem; background: white; border-radius: 6px;">
														<div style="font-weight: 600; color: #0369a1; margin-bottom: 0.25rem;">
															{tt(translations.metrics.expectedImpact)}
														</div>
														<div style="color: var(--gray-700);">{tt(item.expectedImpact)}</div>
													</div>
												)}

												{item.sourceReport && (
													<div style="margin-top: 1rem;">
														<a href={item.sourceReport} style="color: var(--accent); text-decoration: none;">
															📄 {tt(translations.sourceReport)} →
														</a>
													</div>
												)}
											</div>
										</div>
									))}
								</div>
							</div>
						)}

						<!-- In Progress Improvements Section -->
						{inProgressImprovements.length > 0 && (
							<div style="margin-top: 3rem;">
								<h2 class="text-3xl font-bold mb-4">🚧 {tt(translations.sections.inProgress)}</h2>
								<div class="timeline">
									{inProgressImprovements.map((item) => (
										<div class="timeline-item" data-category={item.category}>
											<div class="improvement-card" style="background: #e0f2fe; border-color: #0369a1;">
												<div class="card-header">
													<h3 class="card-title">{tt(item.title)}</h3>
													<span class={`category-badge category-${item.category.toLowerCase()}`}>
														{item.category}
													</span>
												</div>
												<p>{tt(item.description)}</p>
												{/* Add similar structure as planned items */}
											</div>
										</div>
									))}
								</div>
							</div>
						)}

						<!-- Completed Improvements Section -->
						{completedImprovements.length > 0 && (
							<div style="margin-top: 3rem;">
								<h2 class="text-3xl font-bold mb-4">✅ {tt(translations.sections.completed)}</h2>
								<div class="timeline">
									{completedImprovements.map((item) => (
										<div class="timeline-item" data-category={item.category}>
											<div class="improvement-card">
												<div class="card-header">
													<h3 class="card-title">{tt(item.title)}</h3>
													<span class={`category-badge category-${item.category.toLowerCase()}`}>
														{item.category}
													</span>
												</div>

												<p>{tt(item.description)}</p>

												<div class="before-after">
													<div class="before">
														<div class="metric-label">{tt(translations.metrics.before)}</div>
														<div class="value">{tt(item.before.value)}</div>
														<div class="metric-label">{tt(item.before.metric)}</div>
													</div>
													<div class="arrow">→</div>
													<div class="after">
														<div class="metric-label">{tt(translations.metrics.after)}</div>
														<div class={`value ${item.impactType === 'positive' ? 'impact-positive' : 'impact-negative'}`}>
															{tt(item.after.value)}
														</div>
														<div class="metric-label">{tt(item.after.metric)}</div>
													</div>
												</div>

												<div class="metrics-row">
													<div class="metric">
														<span class="metric-label">{tt(translations.metrics.impact)}:</span>
														<span class={`metric-value ${item.impactType === 'positive' ? 'impact-positive' : 'impact-negative'}`}>
															{item.impact}
														</span>
													</div>
													<div class="metric">
														<span class="metric-label">{tt(translations.metrics.effort)}:</span>
														<span class="metric-value">{tt(item.effort)}</span>
													</div>
													<div class="metric">
														<span class="metric-label">{tt(translations.metrics.roi)}:</span>
														<span class="metric-value">{tt(item.roi)}</span>
													</div>
													<div class="metric">
														<span class="metric-label">{tt(translations.metrics.date)}:</span>
														<span class="metric-value">{item.date}</span>
													</div>
												</div>

												{item.lessons && tt(item.lessons).length > 0 && (
													<div class="lessons">
														<div class="lessons-title">💡 {tt(translations.lessons.title)}</div>
														<ul>
															{tt(item.lessons).map((lesson: string) => (
																<li>{lesson}</li>
															))}
														</ul>
													</div>
												)}

												{item.sourceReport && (
													<div style="margin-top: 1rem;">
														<a href={item.sourceReport} style="color: var(--accent); text-decoration: none;">
															📄 {tt(translations.sourceReport)} →
														</a>
													</div>
												)}
											</div>
										</div>
									))}
								</div>
							</div>
						)}
					</>
				)}

				<!-- Data Sources & Notes -->
				<div class="data-section">
					<h3 class="text-xl font-bold mb-4">📝 {tt(translations.dataSection.title)}</h3>
					<ul class="space-y-2 mb-4">
						<li><strong>{tt(translations.dataSection.analytics)}:</strong> Google Analytics 4 (Property ID: 395101361)</li>
						<li><strong>{tt(translations.dataSection.reports)}:</strong> <a href={`/${lang}/blog`} class="text-accent hover:underline">/{lang}/blog</a></li>
						<li><strong>{tt(translations.dataSection.todos)}:</strong> <code>/improvement-tracking/</code></li>
						<li><strong>{tt(translations.dataSection.autoUpdate)}:</strong> improvement-tracker {lang === 'ko' ? '에이전트가 완료된 개선사항을 자동으로 이 페이지에 반영' : lang === 'ja' ? 'エージェントが完了した改善事項を自動的にこのページに反映' : 'agent automatically reflects completed improvements to this page'}</li>
					</ul>
					<p class="text-gray-600">
						{tt(translations.dataSection.description)}
					</p>
				</div>
			</section>
		</main>
		<Footer lang={lang} />

		<script>
			// Category filtering
			const filterTabs = document.querySelectorAll('.filter-tab');
			const timelineItems = document.querySelectorAll('.timeline-item');

			filterTabs.forEach(tab => {
				tab.addEventListener('click', () => {
					const category = tab.dataset.category;

					// Update active tab
					filterTabs.forEach(t => t.classList.remove('active'));
					tab.classList.add('active');

					// Filter items
					timelineItems.forEach(item => {
						if (category === 'all' || item.dataset.category === category) {
							item.style.display = 'block';
						} else {
							item.style.display = 'none';
						}
					});
				});
			});
		</script>
	</body>
</html>
