---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import type { ImageMetadata } from 'astro';
import FallbackImage from '../assets/blog-placeholder-about.jpg';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';

interface Props {
	title: string;
	description: string;
	image?: ImageMetadata;
	articleData?: {
		publishedTime: string;
		modifiedTime?: string;
		author: string;
		tags?: string[];
	};
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = FallbackImage, articleData } = Astro.props;

// 로컬호스트 체크 (GA 비활성화용)
const isLocalhost = Astro.url.hostname === 'localhost' || Astro.url.hostname === '127.0.0.1';

// WebSite Schema (모든 페이지)
const websiteSchema = {
	'@context': 'https://schema.org',
	'@type': 'WebSite',
	'name': SITE_TITLE,
	'description': SITE_DESCRIPTION,
	'url': Astro.site?.toString(),
};

// Article Schema (블로그 포스트만)
const articleSchema = articleData ? {
	'@context': 'https://schema.org',
	'@type': 'BlogPosting',
	'headline': title,
	'description': description,
	'image': new URL(image.src, Astro.url).toString(),
	'datePublished': articleData.publishedTime,
	'dateModified': articleData.modifiedTime || articleData.publishedTime,
	'author': {
		'@type': 'Person',
		'name': articleData.author,
	},
	'publisher': {
		'@type': 'Organization',
		'name': SITE_TITLE,
		'logo': {
			'@type': 'ImageObject',
			'url': new URL('/favicon.svg', Astro.site).toString(),
		},
	},
	'mainEntityOfPage': {
		'@type': 'WebPage',
		'@id': canonicalURL.toString(),
	},
	...(articleData.tags && { 'keywords': articleData.tags.join(', ') }),
} : null;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/rss+xml"
	title={SITE_TITLE}
	href={new URL('rss.xml', Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- Google AdSense -->
<meta name="google-adsense-account" content="ca-pub-7556938384772610">

<!-- Google Fonts Optimization (preconnect + async load) -->
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<!-- 필수 웨이트만 로드: Inter(400,600,700), Noto Sans KR(400,700), Noto Sans JP(400,700), JetBrains Mono(400,600) -->
<link
	href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Noto+Sans+KR:wght@400;700&family=Noto+Sans+JP:wght@400;700&family=JetBrains+Mono:wght@400;600&display=swap"
	rel="stylesheet"
	media="print"
	onload="this.media='all'"
/>
<noscript>
	<link
		href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Noto+Sans+KR:wght@400;700&family=Noto+Sans+JP:wght@400;700&family=JetBrains+Mono:wght@400;600&display=swap"
		rel="stylesheet"
	/>
</noscript>

<!-- Font preloads (local fonts) -->
<link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin />
<link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image.src, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image.src, Astro.url)} />

<!-- Schema.org Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify(websiteSchema)} />
{articleSchema && <script type="application/ld+json" set:html={JSON.stringify(articleSchema)} />}

<!-- Google Analytics (프로덕션 환경에서만 로드) -->
{!isLocalhost && (
	<>
		<script async src="https://www.googletagmanager.com/gtag/js?id=G-PWXG8FFDHW"></script>
		<script is:inline>
		  window.dataLayer = window.dataLayer || [];
		  function gtag(){dataLayer.push(arguments);}
		  gtag('js', new Date());

		  gtag('config', 'G-PWXG8FFDHW');
		</script>

		<!-- External Link Click Tracking -->
		<script is:inline>
	document.addEventListener('DOMContentLoaded', () => {
		console.log('[GA Debug] External link tracking initialized');

		// Track all external link clicks
		document.addEventListener('click', (event) => {
			const target = event.target;
			const link = target.closest('a');

			if (link && link.href) {
				const currentHost = window.location.hostname;
				const linkUrl = new URL(link.href, window.location.href);

				console.log('[GA Debug] Link clicked:', {
					href: link.href,
					currentHost,
					linkHost: linkUrl.hostname,
					isExternal: linkUrl.hostname !== currentHost,
					isSocialLink: link.classList.contains('social-link')
				});

				// Check if link is external (different domain)
				// Exclude social links (already tracked separately)
				if (linkUrl.hostname !== currentHost &&
					!link.classList.contains('social-link')) {
					console.log('[GA Debug] External link detected');

					// Send GA4 event
					if (typeof gtag !== 'undefined') {
						const eventData = {
							'link_url': link.href,
							'link_domain': linkUrl.hostname,
							'link_text': link.textContent?.trim() || '',
							'page_location': window.location.href,
							'event_category': 'engagement',
							'event_label': 'external_link'
						};
						console.log('[GA Debug] Sending external_link_click event:', eventData);
						gtag('event', 'external_link_click', eventData);
						console.log('[GA Debug] Event sent successfully');
					} else {
						console.warn('[GA Debug] gtag is not defined');
					}
				}
			}
		});
	});
		</script>

		<!-- Core Web Vitals Tracking -->
		<script>
	// Import and track Core Web Vitals
	import { onCLS, onLCP, onFCP, onTTFB, onINP } from 'web-vitals';

	function sendToGoogleAnalytics({ name, delta, value, id, rating }) {
		// Send to Google Analytics
		if (typeof gtag !== 'undefined') {
			gtag('event', name, {
				event_category: 'Web Vitals',
				event_label: id,
				value: Math.round(name === 'CLS' ? delta * 1000 : delta),
				metric_value: value,
				metric_rating: rating,
				non_interaction: true,
			});
		}

		// Log to console in development
		if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
			console.log(`[Web Vitals] ${name}:`, {
				value: Math.round(name === 'CLS' ? value * 1000 : value) / (name === 'CLS' ? 1000 : 1),
				rating: rating,
				id: id
			});
		}
	}

	// Track all Core Web Vitals
	onCLS(sendToGoogleAnalytics);  // Cumulative Layout Shift
	onLCP(sendToGoogleAnalytics);  // Largest Contentful Paint
	onFCP(sendToGoogleAnalytics);  // First Contentful Paint
	onTTFB(sendToGoogleAnalytics); // Time to First Byte
	onINP(sendToGoogleAnalytics);  // Interaction to Next Paint (replaces deprecated FID)
		</script>
	</>
)}

<!-- 로컬호스트 환경 디버그 메시지 -->
{isLocalhost && (
	<script is:inline>
		console.log('[GA] Google Analytics is disabled in localhost environment');
	</script>
)}
