---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import FormattedDate from './FormattedDate.astro';

interface Props {
	href: string;
	title: string;
	description: string;
	pubDate: Date;
	heroImage?: ImageMetadata;
	tags?: string[];
}

const { href, title, description, pubDate, heroImage, tags } = Astro.props;
---

<article class="group relative bg-white rounded-xl shadow-sm hover:shadow-xl transition-all duration-300 overflow-hidden border border-gray-200">
	<a href={href} class="block">
		{heroImage && (
			<div class="relative h-48 overflow-hidden bg-gray-100">
				<Image
					src={heroImage}
					alt={title}
					width={600}
					height={400}
					class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
					loading="lazy"
					decoding="async"
					format="webp"
					quality={80}
				/>
			</div>
		)}
		<div class="p-6">
			<div class="flex items-center gap-2 text-xs text-gray-500 mb-3">
				<time datetime={pubDate.toISOString()}>
					<FormattedDate date={pubDate} />
				</time>
			</div>
			{tags && tags.length > 0 && (
				<div class="flex flex-wrap gap-2 mb-3">
					{tags.slice(0, 3).map((tag) => (
						<span class="inline-block px-2 py-1 text-xs font-medium text-accent bg-accent/10 rounded-full">
							#{tag}
						</span>
					))}
				</div>
			)}
			<h3 class="text-xl font-bold text-gray-900 mb-2 group-hover:text-accent transition-colors line-clamp-2">
				{title}
			</h3>
			<p class="text-gray-600 text-sm line-clamp-3">
				{description}
			</p>
			<div class="mt-4 flex items-center text-accent font-medium text-sm">
				<span class="group-hover:translate-x-1 transition-transform">Read more â†’</span>
			</div>
		</div>
	</a>
</article>
